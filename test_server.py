#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ —Å–µ—Ä–≤–µ—Ä—É CS2
–ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ —Å–µ—Ä–≤–µ—Ä–∞ –∏ –ø–æ–ª—É—á–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö –∏–≥—Ä–æ–∫–æ–≤
"""

import a2s
import sys
import argparse
from datetime import datetime

def test_server_connection(server_ip, server_port, timeout=5):
    """
    –¢–µ—Å—Ç–∏—Ä—É–µ—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ —Å–µ—Ä–≤–µ—Ä—É CS2
    """
    print(f"üîç –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ —Å–µ—Ä–≤–µ—Ä—É {server_ip}:{server_port}")
    print("=" * 60)
    
    address = (server_ip, server_port)
    
    try:
        print("üìã –ü–æ–ª—É—á–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ —Å–µ—Ä–≤–µ—Ä–µ...")
        info = a2s.info(address, timeout=timeout)
        
        print(f"‚úÖ –°–µ—Ä–≤–µ—Ä –¥–æ—Å—Ç—É–ø–µ–Ω!")
        print(f"   –ù–∞–∑–≤–∞–Ω–∏–µ: {info.server_name}")
        print(f"   –ö–∞—Ä—Ç–∞: {info.map_name}")
        print(f"   –ò–≥—Ä–æ–∫–æ–≤: {info.player_count}/{info.max_players}")
        print(f"   –ò–≥—Ä–∞: {info.game}")
        print(f"   –í–µ—Ä—Å–∏—è: {info.version}")
        print(f"   –ü—Ä–æ—Ç–æ–∫–æ–ª: {info.protocol}")
        print()
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ —Å–µ—Ä–≤–µ—Ä–µ: {e}")
        return False
    
    try:
        print("üë• –ü–æ–ª—É—á–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ –∏–≥—Ä–æ–∫–æ–≤...")
        players = a2s.players(address, timeout=timeout)
        
        if len(players) == 0:
            print("‚ÑπÔ∏è  –ù–∞ —Å–µ—Ä–≤–µ—Ä–µ –Ω–µ—Ç –∏–≥—Ä–æ–∫–æ–≤")
        else:
            print(f"‚úÖ –ù–∞–π–¥–µ–Ω–æ {len(players)} –∏–≥—Ä–æ–∫–æ–≤:")
            print("-" * 60)
            print(f"{'‚Ññ':<3} {'–ù–∏–∫–Ω–µ–π–º':<25} {'–°—á–µ—Ç':<8} {'–í—Ä–µ–º—è':<12}")
            print("-" * 60)
            
            for i, player in enumerate(players, 1):
                duration = f"{int(player.duration)}—Å"
                if player.duration >= 60:
                    minutes = int(player.duration // 60)
                    seconds = int(player.duration % 60)
                    duration = f"{minutes}–º {seconds}—Å"
                
                print(f"{i:<3} {player.name[:24]:<25} {player.score:<8} {duration:<12}")
        
        print()
        return True
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Å–ø–∏—Å–∫–∞ –∏–≥—Ä–æ–∫–æ–≤: {e}")
        return False

def test_popular_servers():
    """
    –¢–µ—Å—Ç–∏—Ä—É–µ—Ç –ø–æ–ø—É–ª—è—Ä–Ω—ã–µ –ø—É–±–ª–∏—á–Ω—ã–µ —Å–µ—Ä–≤–µ—Ä—ã CS2
    """
    print("üåç –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–æ–ø—É–ª—è—Ä–Ω—ã—Ö –ø—É–±–ª–∏—á–Ω—ã—Ö —Å–µ—Ä–≤–µ—Ä–æ–≤:")
    print("=" * 60)
    
    # –°–ø–∏—Å–æ–∫ –ø–æ–ø—É–ª—è—Ä–Ω—ã—Ö –ø—É–±–ª–∏—á–Ω—ã—Ö —Å–µ—Ä–≤–µ—Ä–æ–≤ (–º–æ–≥—É—Ç –±—ã—Ç—å –Ω–µ–¥–æ—Å—Ç—É–ø–Ω—ã)
    test_servers = [
        ("185.25.205.19", 27015, "–ü—Ä–∏–º–µ—Ä —Å–µ—Ä–≤–µ—Ä–∞ 1"),
        ("185.25.205.20", 27015, "–ü—Ä–∏–º–µ—Ä —Å–µ—Ä–≤–µ—Ä–∞ 2"),
        ("localhost", 27015, "–õ–æ–∫–∞–ª—å–Ω—ã–π —Å–µ—Ä–≤–µ—Ä"),
    ]
    
    available_servers = []
    
    for server_ip, server_port, description in test_servers:
        print(f"\nüì° –ü—Ä–æ–≤–µ—Ä–∫–∞ {description} ({server_ip}:{server_port})...")
        try:
            address = (server_ip, server_port)
            info = a2s.info(address, timeout=3)
            print(f"‚úÖ –î–æ—Å—Ç—É–ø–µ–Ω: {info.server_name} ({info.player_count}/{info.max_players} –∏–≥—Ä–æ–∫–æ–≤)")
            available_servers.append((server_ip, server_port, info.server_name))
        except Exception as e:
            print(f"‚ùå –ù–µ–¥–æ—Å—Ç—É–ø–µ–Ω: {e}")
    
    if available_servers:
        print(f"\nüéØ –ù–∞–π–¥–µ–Ω–æ {len(available_servers)} –¥–æ—Å—Ç—É–ø–Ω—ã—Ö —Å–µ—Ä–≤–µ—Ä–æ–≤:")
        for ip, port, name in available_servers:
            print(f"   {ip}:{port} - {name}")
    else:
        print("\n‚ö†Ô∏è  –ù–µ –Ω–∞–π–¥–µ–Ω–æ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö —Å–µ—Ä–≤–µ—Ä–æ–≤ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è")
    
    return available_servers

def main():
    parser = argparse.ArgumentParser(description='–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–µ—Ä–≤–µ—Ä–∞ CS2')
    parser.add_argument('--ip', default='127.0.0.1', help='IP-–∞–¥—Ä–µ—Å —Å–µ—Ä–≤–µ—Ä–∞ (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é: 127.0.0.1)')
    parser.add_argument('--port', type=int, default=27015, help='–ü–æ—Ä—Ç —Å–µ—Ä–≤–µ—Ä–∞ (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é: 27015)')
    parser.add_argument('--timeout', type=int, default=5, help='–¢–∞–π–º–∞—É—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –≤ —Å–µ–∫—É–Ω–¥–∞—Ö (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é: 5)')
    parser.add_argument('--test-public', action='store_true', help='–¢–µ—Å—Ç–∏—Ä–æ–≤–∞—Ç—å –ø–æ–ø—É–ª—è—Ä–Ω—ã–µ –ø—É–±–ª–∏—á–Ω—ã–µ —Å–µ—Ä–≤–µ—Ä—ã')
    
    args = parser.parse_args()
    
    print(f"üéÆ CS2 Server Tester")
    print(f"–í—Ä–µ–º—è: {datetime.now().strftime('%Y-%m-%d %H:%M:%S')}")
    print()
    
    if args.test_public:
        available_servers = test_popular_servers()
        if available_servers:
            print(f"\nüîÑ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–µ—Ä–≤–æ–≥–æ –¥–æ—Å—Ç—É–ø–Ω–æ–≥–æ —Å–µ—Ä–≤–µ—Ä–∞...")
            ip, port, name = available_servers[0]
            test_server_connection(ip, port, args.timeout)
    else:
        success = test_server_connection(args.ip, args.port, args.timeout)
        if not success:
            print("\nüí° –°–æ–≤–µ—Ç—ã –ø–æ —É—Å—Ç—Ä–∞–Ω–µ–Ω–∏—é –Ω–µ–ø–æ–ª–∞–¥–æ–∫:")
            print("   1. –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ —Å–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω –∏ –¥–æ—Å—Ç—É–ø–µ–Ω")
            print("   2. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø—Ä–∞–≤–∏–ª—å–Ω–æ—Å—Ç—å IP-–∞–¥—Ä–µ—Å–∞ –∏ –ø–æ—Ä—Ç–∞")
            print("   3. –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ —Å–µ—Ä–≤–µ—Ä –ø–æ–∑–≤–æ–ª—è–µ—Ç A2S –∑–∞–ø—Ä–æ—Å—ã")
            print("   4. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –±—Ä–∞–Ω–¥–º–∞—É—ç—Ä–∞")
            print(f"   5. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —É–≤–µ–ª–∏—á–∏—Ç—å —Ç–∞–π–º–∞—É—Ç: --timeout 10")
            sys.exit(1)

if __name__ == "__main__":
    main() 